
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.16.2
 * Query Engine version: 34ace0eb2704183d2c05b60b52fba5c43c13f303
 */
Prisma.prismaVersion = {
  client: "5.16.2",
  engine: "34ace0eb2704183d2c05b60b52fba5c43c13f303"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  id_operador: 'id_operador',
  nombre: 'nombre',
  apellidos: 'apellidos',
  ci: 'ci',
  celular: 'celular',
  rol: 'rol',
  estado: 'estado'
};

exports.Prisma.OperatorScalarFieldEnum = {
  id: 'id',
  razon_social: 'razon_social',
  nit: 'nit',
  nim_niar: 'nim_niar',
  nro_nim: 'nro_nim',
  fecha_exp_nim: 'fecha_exp_nim',
  tipo_operador: 'tipo_operador',
  nro_personeria: 'nro_personeria',
  nro_matricula_seprec: 'nro_matricula_seprec',
  fecha_exp_seprec: 'fecha_exp_seprec',
  tipo_doc_creacion: 'tipo_doc_creacion',
  doc_creacion: 'doc_creacion',
  dl_departamento: 'dl_departamento',
  dl_municipio: 'dl_municipio',
  dl_direccion: 'dl_direccion',
  dl_ubicacion: 'dl_ubicacion',
  correo_inst: 'correo_inst',
  tel_fijo: 'tel_fijo',
  celular: 'celular',
  celular_2: 'celular_2',
  act_exploracion: 'act_exploracion',
  act_comer_interna: 'act_comer_interna',
  act_comer_externa: 'act_comer_externa',
  act_industrializacion: 'act_industrializacion',
  act_tras_colas: 'act_tras_colas',
  act_explotacion: 'act_explotacion',
  act_ben_concentracion: 'act_ben_concentracion',
  act_refinacion: 'act_refinacion',
  act_fundicion: 'act_fundicion',
  tipo_explotacion: 'tipo_explotacion',
  denominacion_area: 'denominacion_area',
  nro_codigo_unico: 'nro_codigo_unico',
  nro_cuadricula: 'nro_cuadricula',
  municipio_origen: 'municipio_origen',
  nro_ruex: 'nro_ruex',
  verif_cert_liberacion: 'verif_cert_liberacion',
  nro_res_ministerial: 'nro_res_ministerial',
  nombre_resp_for101: 'nombre_resp_for101',
  ci_resp_for101: 'ci_resp_for101',
  celular_resp_for101: 'celular_resp_for101',
  correo_resp_for101: 'correo_resp_for101',
  nombre_resp_tmuestra: 'nombre_resp_tmuestra',
  ci_resp_tmuestra: 'ci_resp_tmuestra',
  celular_resp_tmuestra: 'celular_resp_tmuestra',
  correo_resp_tmuestra: 'correo_resp_tmuestra'
};

exports.Prisma.SampleScalarFieldEnum = {
  id: 'id',
  fecha_emision: 'fecha_emision',
  ubi_geografica: 'ubi_geografica',
  lugar_verificacion: 'lugar_verificacion',
  id_operador: 'id_operador',
  responsable: 'responsable',
  lotes: 'lotes',
  tipo_muestra: 'tipo_muestra',
  presentacion: 'presentacion',
  sacos: 'sacos',
  camiones: 'camiones',
  peso_neto: 'peso_neto',
  peso_parcial: 'peso_parcial',
  id_municipio: 'id_municipio',
  senerecom: 'senerecom',
  tipo_agranel: 'tipo_agranel',
  tipo_emsacado: 'tipo_emsacado',
  tipo_lingotes: 'tipo_lingotes',
  tipo_sal: 'tipo_sal',
  tipo_otr: 'tipo_otr',
  observaciones: 'observaciones',
  estado: 'estado',
  formExtId: 'formExtId'
};

exports.Prisma.MineralScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  sigla: 'sigla',
  descripcion: 'descripcion',
  estado: 'estado'
};

exports.Prisma.SampleMineralScalarFieldEnum = {
  sampleId: 'sampleId',
  mineralId: 'mineralId',
  ley: 'ley',
  unidad: 'unidad'
};

exports.Prisma.FormExtScalarFieldEnum = {
  id: 'id',
  id_sample: 'id_sample',
  m03: 'm03',
  nro_factura_exportacion: 'nro_factura_exportacion',
  laboratorio: 'laboratorio',
  cod_analisis: 'cod_analisis',
  des_comprador: 'des_comprador',
  des_aduana: 'des_aduana',
  des_pais: 'des_pais',
  tipo_transporte: 'tipo_transporte',
  placa: 'placa',
  nom_conductor: 'nom_conductor',
  licencia: 'licencia',
  observaciones: 'observaciones'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Operator: 'Operator',
  Sample: 'Sample',
  Mineral: 'Mineral',
  SampleMineral: 'SampleMineral',
  FormExt: 'FormExt'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
